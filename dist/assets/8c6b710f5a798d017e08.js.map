{"version":3,"sources":["webpack:///./src/app/page/index.jsx","webpack:///./src/app/page/styles.styl","webpack:///./src/app/page/styles.styl?5737"],"names":["Logger","Component","componentDidMount","render","logger","create","info","window","appReady","resourcesReady","loader","document","getElementById","style","display","appLoaded","page","props","children","displayName","defaultProps","propTypes"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA,IAAIA,SAAS,yBAAkB,UAAlB,CAAb;;AAEA;;;;IAGqBC,S;;;;;;;;;;;;;;6MAMjBC,iB;;;;;;0BAgBAC,M;;;;;;;;;;;4CAhBoB;AAChB,gBAAIC,SAASJ,OAAOK,MAAP,CAAc,mBAAd,CAAb;AACAD,mBAAOE,IAAP,CAAY,OAAZ;;AAEA;AACAC,mBAAOC,QAAP,GAAkB,IAAlB;;AAEA;AACA,gBAAGD,OAAOE,cAAV,EAA0B;AACtB,oBAAIC,SAASC,SAASC,cAAT,CAAwB,gBAAxB,CAAb;AACA,oBAAGF,MAAH,EAAU;AAAEA,2BAAOG,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AAAgC;;AAE5CP,uBAAOQ,SAAP,GAAmB,IAAnB;AACH;AACJ;AAnBD;;;;iCAqBS;AACL,mBACI;AAAA;AAAA,kBAAK,WAAW,iBAAOC,IAAvB;AACK,qBAAKC,KAAL,CAAWC,QADhB;AAGI;AAHJ,aADJ;AAOH;;;;EA9BkC,gBAAMjB,S;;AAAxBA,S,CAEVkB,W,GAAc,U;AAFJlB,S,CAGVmB,Y,GAAe,E;AAHLnB,S,CAIVoB,S,GAAY,E;kBAJFpB,S;;;;;;;;ACVrB;AACA;;;AAGA;AACA,iCAAkC,uFAAuF;;AAEzH;;;;;;;;ACPA;;AAEA;AACA,sCAAoP;AACpP;AACA;AACA,+CAAoF;AACpF;AACA;AACA;AACA;AACA;AACA,kEAAkE,8FAA8F,+CAA+C,mCAAmC;AAClP,0EAA0E,8FAA8F,+CAA+C,mCAAmC;AAC1P;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC,UAAU,EAAE;AAC5C,C","file":"8c6b710f5a798d017e08.js","sourcesContent":["import React from \"react\";\nimport {LoggerFactory} from \"darch/src/utils\";\nimport Toaster from \"darch/src/toaster\";\nimport styles from \"./styles\";\n\nlet Logger = new LoggerFactory(\"app.page\");\n\n/**\n * Main component class.\n */\nexport default class Component extends React.Component {\n    /** React properties **/\n    static displayName = \"app.page\";\n    static defaultProps = {};\n    static propTypes = {};\n\n    componentDidMount() {\n        let logger = Logger.create(\"componentDidMount\");\n        logger.info(\"enter\");\n\n        // Set app as ready.\n        window.appReady = true;\n\n        // If all resources are also ready, then remove loader.\n        if(window.resourcesReady) {\n            var loader = document.getElementById(\"loader-overlay\");\n            if(loader){ loader.style.display = \"none\"; }\n\n            window.appLoaded = true;\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.page}>\n                {this.props.children}\n\n                <Toaster/>\n            </div>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/page/index.jsx","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"styles.styl\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"modules\":true,\"sourceMap\":true,\"camelCase\":true,\"localIdentName\":\"[hash:base64:5]\"}!./~/stylus-loader?{\"preferPathResolver\":\"webpack\"}!./src/app/page/styles.styl\n// module id = 1369\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"modules\\\":true,\\\"sourceMap\\\":true,\\\"camelCase\\\":true,\\\"localIdentName\\\":\\\"[hash:base64:5]\\\"}!../../../node_modules/stylus-loader/index.js?{\\\"preferPathResolver\\\":\\\"webpack\\\"}!./styles.styl\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"modules\\\":true,\\\"sourceMap\\\":true,\\\"camelCase\\\":true,\\\"localIdentName\\\":\\\"[hash:base64:5]\\\"}!../../../node_modules/stylus-loader/index.js?{\\\"preferPathResolver\\\":\\\"webpack\\\"}!./styles.styl\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"modules\\\":true,\\\"sourceMap\\\":true,\\\"camelCase\\\":true,\\\"localIdentName\\\":\\\"[hash:base64:5]\\\"}!../../../node_modules/stylus-loader/index.js?{\\\"preferPathResolver\\\":\\\"webpack\\\"}!./styles.styl\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/page/styles.styl\n// module id = 1371\n// module chunks = 0"],"sourceRoot":""}